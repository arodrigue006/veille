<?php
require('header.php');
require('nav.php');
?>

<link rel="stylesheet" href="assets/css/Avantages_Inconvenients.css" type="text/css">

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3 position-fixed menu-index">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Points forts/Points faibles</h5>
                    <ul class="list-group list-group-flush">
                        <a class="list-group-item sommaire" href="#avantages">Avantages</a>
                        <a class="list-group-item sommaire" href="#inconv√©nients">Inconv√©nients</a>
                        <a class="list-group-item sommaire" href="#concurrence">La concurrence</a>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-sm-3"></div>
        <div class="col-sm-6">
            <div class="col-sm-3"></div>
            <div class="container">

                <h3 class="text-center">Beaucoup d'avantages, peu d'inconv√©nients, nous allons voir ca tout de suite !</h3>

                <h4 id="avantages">Les avantages</h4>

                <p>
                    Tout d'abord Three.js est open-source, nous pouvons donc facilement regarder le code source et comprendre les fonctionnalit√©s du code.
                    <p>Comme on a pu le voir pr√©c√©d√®ment Three.js utilise la t√©chnologie WebGL pour les graphiques qui ne prend pas en charge la plupart des navigateurs, mais Three.js quant √† lui prend en charge la plupart des navigateurs, l√† est toutes la diff√©rence.
                    Sans parler du fait que par exemple faire un carr√© en WebGL demande des dizaines de lignes tandis que faire un cube textur√© en Three : 5 lignes, autrement dit cela simplifie grandement le code et donc une utilisation plus agr√©able.
</p>
De plus cela ne n√©cessite aucun plugins tiers pour ex√©cuter le code. Il vous suffit de travailler sur un seul langage de programmation JavaScript et bien s√ªr HTML.
                </p>
                <p> Le prix de three.js est de 0 euros par utilisateur et par mois (ce logiciel dispose d‚Äôune version d‚Äôessai gratuite), seules quelques fonctionnalit√©es facultatives(o√π je ne me pencherai pas ici) peuvent √™tre payantes.
                </p>
                <p> Enfin Three.js dispose d'une grande communaut√©, les avis en ligne sur le logiciel sont assez nombreux et positifs dans l‚Äôensemble.
                    C'est donc une solution robuste. Elle a fait ses preuves, pr√®s d‚Äôune d√©cennie. De nombreuses ressources peuvent √™tre trouv√©es (en plus de la documentation officielle).
                </p>

                <br>
                <h4 id="inconv√©nients">Les inconv√©nients</h4>

                <p>
                    Consomme beaucoup de ressource, that's all üòú
                </p>
                <br>

                <h4 id="concurrence">La concurrence</h4>

                <p>
                La principale concurrence reste:

                    BabylonJS : Un framework JavaScript complet pour cr√©er des jeux 3D avec HTML5, WebGL, WebVR et Web Audio.
                    Il est dont plus acc√®s sur le d√©veloppement de jeux. Three.js quant √† lui est meilleur pour les visualisations et les charges 
                    plus l√©g√®res pour les effets pour le d√©veloppement Web. <br><br>
                    Babylon est plus lourd (5x fois de ce que j'ai vu) disposant d'une Une API de niveau sup√©rieur pour les √©v√©nements 
                    de clic et de souris sur les maillages. La cam√©ra d'orbite par d√©faut a une belle physique incluse. 
                    Dans l'ensemble, c'est un peu plus proche d'√™tre un moteur de jeu complet.
                    <br><br>
                    Babylon est probablement meilleur lorsque vous souhaitez simplement obtenir une belle vue 
                    d'un mod√®le et peut-√™tre des animations / interactions pour un client en peu de temps et que vous ne souhaitez pas passer 
                    √† des concepts 3D d'apprentissage en profondeur.
                    Un endroit o√π trois est clairement le meilleur choix serait tout ce qui n'utilise pas beaucoup de mod√®les 3D export√©s. 
                    Si vous n'avez pas beaucoup de mod√®les, 
                    vous n'obtenez pas grand-chose pour la taille de fichier suppl√©mentaire de Babylon.
                    <br><br>

            </div>

        </div>
    </div>
</div>



<?php
require('footer.php');
?>